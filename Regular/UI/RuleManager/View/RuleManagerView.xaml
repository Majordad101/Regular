<Window
    x:Class="Regular.UI.RuleManager.View.RuleManagerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="RuleManagerWindow"
    Title=" Rule Manager"
    Width="{Binding WindowWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
    Height="{Binding WindowHeight, UpdateSourceTrigger=PropertyChanged}"
    MinWidth="{Binding WindowMinWidth, UpdateSourceTrigger=PropertyChanged}"
    MinHeight="{Binding WindowMinHeight, UpdateSourceTrigger=PropertyChanged}"
    MaxWidth="{Binding WindowMaxWidth, UpdateSourceTrigger=PropertyChanged}"
    MaxHeight="{Binding WindowMaxHeight, UpdateSourceTrigger=PropertyChanged}"
    DataContext="{Binding RuleManagerViewModel, RelativeSource={RelativeSource Self}}"
    SizeToContent="WidthAndHeight"
    Style="{DynamicResource RegularWindowResizable}"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary Source="../../../Resources/RegularStyles.xaml" />
    </Window.Resources>
    <Grid Style="{StaticResource RegularGrid}">
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="10" />
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="{Binding ColumnMarginWidth, UpdateSourceTrigger=PropertyChanged}" />
            <ColumnDefinition Width="{Binding ColumnReportWidth, UpdateSourceTrigger=PropertyChanged}" />
        </Grid.ColumnDefinitions>
        <TextBlock
            Grid.Row="0"
            Grid.Column="0"
            Margin="0"
            VerticalAlignment="Center"
            Style="{StaticResource RegularTextBlockHeader}"
            Text="Document Rules" />
        <Button
            Name="ButtonAddNewRule"
            Grid.Row="0"
            Grid.Column="0"
            VerticalAlignment="Center"
            Command="{Binding AddRuleCommand}"
            Content="New Rule"
            IsEnabled="{Binding ButtonsEnabled, UpdateSourceTrigger=PropertyChanged}"
            Style="{StaticResource RegularButton}" />
        <ProgressBar
            Grid.Row="0"
            Grid.Column="2"
            Style="{StaticResource RegularProgressBar}"
            Value="{Binding ProgressBarPercentage, UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock
            Name="ProgressBarTextBlock"
            Grid.Row="0"
            Grid.Column="2"
            Margin="0"
            VerticalAlignment="Center"
            Style="{StaticResource RegularTextBlockProgressBar}"
            Text="{Binding ProgressBarText, UpdateSourceTrigger=PropertyChanged}"
            TextAlignment="Center" />
        <Border
            Grid.Row="2"
            Grid.Column="0"
            BorderBrush="{StaticResource RegularInputBorderColor}"
            BorderThickness="1">
            <ScrollViewer
                Name="RulesScrollViewer"
                HorizontalScrollBarVisibility="Auto"
                PreviewMouseWheel="RegexRulesScrollViewer_PreviewMouseWheel"
                Style="{StaticResource RegularScrollViewer}"
                VerticalScrollBarVisibility="Visible">
                <ListBox
                    Name="ListBoxRegexRules"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    ItemsSource="{Binding RegexRules, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectedIndex="0"
                    SelectedItem="{Binding SelectedRegexRule, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Style="{StaticResource RegularListBox}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid MouseEnter="ListBoxItem_OnMouseEnter" MouseLeave="ListBoxItem_OnMouseLeave">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition Width="25" />
                                </Grid.ColumnDefinitions>
                                <Rectangle
                                    Name="BackgroundRectangle"
                                    Grid.ColumnSpan="7"
                                    Height="30"
                                    Margin="-4,-1,-3,-1"
                                    Fill="{StaticResource RegularInputBackgroundColor}"
                                    Stroke="{StaticResource RegularInputBackgroundColor}"
                                    StrokeThickness="1px"
                                    ToolTip="{Binding ToolTip}" />
                                <TextBlock
                                    x:Name="RegexRuleNameTextBlock"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    FontSize="13"
                                    Style="{StaticResource RegularTextBlockBody}"
                                    Text="{Binding RuleName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock
                                    x:Name="RegexRuleValidationTextBlock"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="0,0,10,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    FontSize="13"
                                    Style="{StaticResource RegularTextBlockBody}"
                                    Text="{Binding ValidationScore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Button
                                    x:Name="EditRegexRuleButton"
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Width="25"
                                    Height="30"
                                    HorizontalAlignment="Right"
                                    Command="{Binding ElementName=RuleManagerWindow, Path=DataContext.EditRuleCommand}"
                                    CommandParameter="{Binding .}"
                                    IsEnabled="{Binding ElementName=RuleManagerWindow, Path=DataContext.ButtonsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource EditItemButton}"
                                    ToolTip="Edit Rule" />
                                <Button
                                    x:Name="DeleteRegexRuleButton"
                                    Grid.Row="0"
                                    Grid.Column="3"
                                    Width="25"
                                    Height="30"
                                    Margin="0,0,-2,0"
                                    HorizontalAlignment="Right"
                                    Command="{Binding ElementName=RuleManagerWindow, Path=DataContext.DeleteRuleCommand}"
                                    CommandParameter="{Binding .}"
                                    IsEnabled="{Binding ElementName=RuleManagerWindow, Path=DataContext.ButtonsEnabled, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource DeleteItemButton}"
                                    ToolTip="Delete Rule" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </ScrollViewer>
        </Border>
        <StackPanel
            Grid.Row="4"
            Grid.Column="0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Orientation="Horizontal">
            <Button
                Name="ButtonMoveRuleUp"
                Width="25"
                Height="25"
                Margin="0,0,3,0"
                Command="{Binding MoveRuleUpCommand}"
                IsEnabled="{Binding ButtonsEnabled, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource ReorderUpButton}" />
            <Button
                Name="ButtonMoveRuleDown"
                Width="25"
                Height="25"
                Margin="0,0,3,0"
                Command="{Binding MoveRuleDownCommand}"
                IsEnabled="{Binding ButtonsEnabled, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource ReorderDownButton}" />
            <Button
                Name="ButtonDuplicateRule"
                Width="25"
                Height="25"
                Margin="0,0,3,0"
                Command="{Binding DuplicateRuleCommand}"
                FontSize="13"
                IsEnabled="{Binding ButtonsEnabled, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource DuplicateRuleButton}" />
        </StackPanel>
        <Button
            Grid.Row="4"
            Grid.Column="0"
            Click="ButtonExecuteRule_OnClick"
            Command="{Binding ExecuteRuleCommand}"
            Content="Execute"
            IsEnabled="{Binding ButtonsEnabled, UpdateSourceTrigger=PropertyChanged}"
            Style="{StaticResource RegularButton}" />
        <DataGrid
            Grid.Row="2"
            Grid.Column="2"
            Margin="0"
            CellEditEnding="DataGrid_OnCellEditEnding"
            HorizontalScrollBarVisibility="Visible"
            ItemsSource="{Binding RuleValidationOutputs, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            Style="{StaticResource RegularDataGrid}"
            VerticalScrollBarVisibility="Visible">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="Auto"
                    MinWidth="80"
                    Binding="{Binding Path=ElementId}"
                    Header="Element ID"
                    HeaderStyle="{StaticResource RegularDataGridColumnHeaderText}"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Width="Auto"
                    MinWidth="100"
                    Binding="{Binding Path=ElementName}"
                    Header="Name"
                    HeaderStyle="{StaticResource RegularDataGridColumnHeaderText}"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    x:Name="ReportParameterNameColumn"
                    Width="Auto"
                    MinWidth="100"
                    Binding="{Binding Path=TrackingParameterValue, UpdateSourceTrigger=PropertyChanged}"
                    Header="{Binding TrackingParameterName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    HeaderStyle="{StaticResource RegularDataGridColumnHeaderText}"
                    IsReadOnly="False" />
                <DataGridTextColumn
                    Width="50"
                    Binding="{Binding Path=ValidationText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Header="Validity"
                    HeaderStyle="{StaticResource RegularDataGridColumnHeaderText}"
                    IsReadOnly="True" />
                <DataGridTextColumn
                    Width="*"
                    MinWidth="120"
                    Binding="{Binding Path=CompliantExample, UpdateSourceTrigger=PropertyChanged}"
                    Header="Compliant Example"
                    HeaderStyle="{StaticResource RegularDataGridColumnHeaderText}"
                    IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
        <DockPanel Grid.Row="4" Grid.Column="2">
            <Button
                HorizontalAlignment="Left"
                Command="{Binding ExportReportCommand}"
                Content="Export"
                DockPanel.Dock="Left"
                IsEnabled="{Binding ButtonsEnabled, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource RegularButton}" />
            <Button
                Name="ButtonClose"
                Click="ButtonClose_Click"
                Content="Close"
                DockPanel.Dock="Right"
                Style="{StaticResource RegularButtonCancel}" />
        </DockPanel>
    </Grid>
</Window>
